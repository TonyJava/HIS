<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="hdvon.dao.OfPresenceMapper" >
  <resultMap id="BaseResultMap" type="hdvon.model.OfPresence" >
    <id column="username" property="username" jdbcType="VARCHAR" />
    <result column="offlineDate" property="offlinedate" jdbcType="CHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="hdvon.model.OfPresence" extends="BaseResultMap" >
    <result column="offlinePresence" property="offlinepresence" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    username, offlineDate
  </sql>
  <sql id="Blob_Column_List" >
    offlinePresence
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ofpresence
    where username = #{username,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from ofpresence
    where username = #{username,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="hdvon.model.OfPresence" >
    insert into ofpresence (username, offlineDate, offlinePresence
      )
    values (#{username,jdbcType=VARCHAR}, #{offlinedate,jdbcType=CHAR}, #{offlinepresence,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="hdvon.model.OfPresence" >
    insert into ofpresence
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="username != null" >
        username,
      </if>
      <if test="offlinedate != null" >
        offlineDate,
      </if>
      <if test="offlinepresence != null" >
        offlinePresence,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="offlinedate != null" >
        #{offlinedate,jdbcType=CHAR},
      </if>
      <if test="offlinepresence != null" >
        #{offlinepresence,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="hdvon.model.OfPresence" >
    update ofpresence
    <set >
      <if test="offlinedate != null" >
        offlineDate = #{offlinedate,jdbcType=CHAR},
      </if>
      <if test="offlinepresence != null" >
        offlinePresence = #{offlinepresence,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where username = #{username,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="hdvon.model.OfPresence" >
    update ofpresence
    set offlineDate = #{offlinedate,jdbcType=CHAR},
      offlinePresence = #{offlinepresence,jdbcType=LONGVARCHAR}
    where username = #{username,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="hdvon.model.OfPresence" >
    update ofpresence
    set offlineDate = #{offlinedate,jdbcType=CHAR}
    where username = #{username,jdbcType=VARCHAR}
  </update>
</mapper>