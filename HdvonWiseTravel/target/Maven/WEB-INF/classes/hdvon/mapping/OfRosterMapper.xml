<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="hdvon.dao.OfRosterMapper" >
  <resultMap id="BaseResultMap" type="hdvon.model.OfRoster" >
    <id column="rosterID" property="rosterid" jdbcType="BIGINT" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="jid" property="jid" jdbcType="VARCHAR" />
    <result column="sub" property="sub" jdbcType="TINYINT" />
    <result column="ask" property="ask" jdbcType="TINYINT" />
    <result column="recv" property="recv" jdbcType="TINYINT" />
    <result column="nick" property="nick" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    rosterID, username, jid, sub, ask, recv, nick
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from ofroster
    where rosterID = #{rosterid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from ofroster
    where rosterID = #{rosterid,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="hdvon.model.OfRoster" >
    insert into ofroster (rosterID, username, jid, 
      sub, ask, recv, nick
      )
    values (#{rosterid,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{jid,jdbcType=VARCHAR}, 
      #{sub,jdbcType=TINYINT}, #{ask,jdbcType=TINYINT}, #{recv,jdbcType=TINYINT}, #{nick,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="hdvon.model.OfRoster" >
    insert into ofroster
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="rosterid != null" >
        rosterID,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="jid != null" >
        jid,
      </if>
      <if test="sub != null" >
        sub,
      </if>
      <if test="ask != null" >
        ask,
      </if>
      <if test="recv != null" >
        recv,
      </if>
      <if test="nick != null" >
        nick,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="rosterid != null" >
        #{rosterid,jdbcType=BIGINT},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="jid != null" >
        #{jid,jdbcType=VARCHAR},
      </if>
      <if test="sub != null" >
        #{sub,jdbcType=TINYINT},
      </if>
      <if test="ask != null" >
        #{ask,jdbcType=TINYINT},
      </if>
      <if test="recv != null" >
        #{recv,jdbcType=TINYINT},
      </if>
      <if test="nick != null" >
        #{nick,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="hdvon.model.OfRoster" >
    update ofroster
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="jid != null" >
        jid = #{jid,jdbcType=VARCHAR},
      </if>
      <if test="sub != null" >
        sub = #{sub,jdbcType=TINYINT},
      </if>
      <if test="ask != null" >
        ask = #{ask,jdbcType=TINYINT},
      </if>
      <if test="recv != null" >
        recv = #{recv,jdbcType=TINYINT},
      </if>
      <if test="nick != null" >
        nick = #{nick,jdbcType=VARCHAR},
      </if>
    </set>
    where rosterID = #{rosterid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="hdvon.model.OfRoster" >
    update ofroster
    set username = #{username,jdbcType=VARCHAR},
      jid = #{jid,jdbcType=VARCHAR},
      sub = #{sub,jdbcType=TINYINT},
      ask = #{ask,jdbcType=TINYINT},
      recv = #{recv,jdbcType=TINYINT},
      nick = #{nick,jdbcType=VARCHAR}
    where rosterID = #{rosterid,jdbcType=BIGINT}
  </update>
</mapper>