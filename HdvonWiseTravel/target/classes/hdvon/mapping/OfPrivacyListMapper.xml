<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="hdvon.dao.OfPrivacyListMapper" >
  <resultMap id="BaseResultMap" type="hdvon.model.OfPrivacyList" >
    <id column="username" property="username" jdbcType="VARCHAR" />
    <id column="name" property="name" jdbcType="VARCHAR" />
    <result column="isDefault" property="isdefault" jdbcType="TINYINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="hdvon.model.OfPrivacyList" extends="BaseResultMap" >
    <result column="list" property="list" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    username, name, isDefault
  </sql>
  <sql id="Blob_Column_List" >
    list
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="hdvon.model.OfPrivacyListKey" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ofprivacylist
    where username = #{username,jdbcType=VARCHAR}
      and name = #{name,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="hdvon.model.OfPrivacyListKey" >
    delete from ofprivacylist
    where username = #{username,jdbcType=VARCHAR}
      and name = #{name,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="hdvon.model.OfPrivacyList" >
    insert into ofprivacylist (username, name, isDefault, 
      list)
    values (#{username,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{isdefault,jdbcType=TINYINT}, 
      #{list,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="hdvon.model.OfPrivacyList" >
    insert into ofprivacylist
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="username != null" >
        username,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="isdefault != null" >
        isDefault,
      </if>
      <if test="list != null" >
        list,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="isdefault != null" >
        #{isdefault,jdbcType=TINYINT},
      </if>
      <if test="list != null" >
        #{list,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="hdvon.model.OfPrivacyList" >
    update ofprivacylist
    <set >
      <if test="isdefault != null" >
        isDefault = #{isdefault,jdbcType=TINYINT},
      </if>
      <if test="list != null" >
        list = #{list,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where username = #{username,jdbcType=VARCHAR}
      and name = #{name,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="hdvon.model.OfPrivacyList" >
    update ofprivacylist
    set isDefault = #{isdefault,jdbcType=TINYINT},
      list = #{list,jdbcType=LONGVARCHAR}
    where username = #{username,jdbcType=VARCHAR}
      and name = #{name,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="hdvon.model.OfPrivacyList" >
    update ofprivacylist
    set isDefault = #{isdefault,jdbcType=TINYINT}
    where username = #{username,jdbcType=VARCHAR}
      and name = #{name,jdbcType=VARCHAR}
  </update>
</mapper>